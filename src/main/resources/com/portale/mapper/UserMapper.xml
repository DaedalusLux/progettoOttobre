<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portale.mapper.UserMapper">

	<select id="GetUsersCount" resultType="java.lang.Long">
		select distinct count(*) over ()
		from users u left join users_details ud
		on u.user_id =
		ud.user_ref
		where u.user_id != 0
		<if test="search != null">
			and (user_org ilike #{search}
			or user_login ilike #{search}
			or nome ilike #{search}
			or cognome ilike #{search}
			or email
			ilike #{search})
		</if>
	</select>

	<select id="GetUserLoginData" resultMap="UserObjectResultMap">
		select u.*, r.*
		from
		users u, users_role r
		where
		u.user_login=#{username}
		and u.role =
		r.role_index
	</select>

	<select id="GetUserPrincipalList" resultMap="UserNameObjectResultMap">
		select u.user_id, u.user_login, ud.nome, ud.cognome
		from
		users u, users_details ud
		where u.user_id = ud.user_ref
		and u.user_id != 0
	</select>

	<select id="GetUserMediaList" resultMap="UserMediaListResultMap">
		select *
		from media
		where
		media_owner = #{id}
		order by media_id
		desc
	</select>

	<resultMap id="UserMediaListResultMap" type="MediaObject">
		<id property="media_id" column="media_id" />
		<result property="media_name" column="media_name" />
		<result property="media_path" column="media_path" />
		<result property="media_owner" column="media_owner" />
		<result property="media_pubblication_date" column="media_pubblication_date" />
	</resultMap>

	<select id="GetUsersIdListByRole" resultType="int">
		select u.user_id
		from users u, users_role ur
		where u.role =
		ur.role_index
		and u.user_id != 0
		<if test="role_name != null">and ur.user_role = #{role_name}</if>
	</select>

	<resultMap id="UserNameObjectResultMap" type="UserObject">
		<result property="usr_id" column="user_id" />
		<result property="usr_username" column="user_login" />
	</resultMap>

	<resultMap id="UserObjectResultMap" type="UserObject">
		<result property="usr_id" column="user_id" />
		<result property="usr_username" column="user_login" />
		<result property="usr_password" column="user_pass" />
		<result property="authorities" column="user_role" />
		<result property="role_name" column="role_name" />
		<result property="locked" column="locked" />
	</resultMap>


	<select id="GetUserInfoByName" resultMap="UsersDetailsResultMap">
		select u.user_id,
		u.user_org, u.user_login, u.locked, u.role, ud.*
		from users u left join
		users_details
		ud
		on u.user_id = ud.user_ref
		where user_login =
		#{username}
	</select>


	<select id="GetUsersDetailsData" resultMap="UsersDetailsResultMap">
		select u.user_id, u.user_org, u.user_login, r.role_name ,
		u.locked, ud.*
		from users u left join users_details ud
		on u.user_id =
		ud.user_ref
		left join
		users_role r
		on r.role_index = u.role
		where u.user_id != 0
		<if test="search != null">
			and (user_org ilike #{search}
			or user_login ilike #{search}
			or nome ilike #{search}
			or cognome ilike #{search}
			or email
			ilike #{search})
		</if>
		order by
		u.user_id asc
		limit #{limit}
		offset #{offset}
	</select>

	<resultMap id="UsersDetailsResultMap" type="UserObject">
		<id property="usr_id" column="user_id" />
		<result property="usr_organization" column="user_org" />
		<result property="usr_username" column="user_login" />
		<result property="authorities" column="role" />
		<result property="role_name" column="role_name" />
		<result property="locked" column="locked" />
		<result property="nome" column="nome" />
		<result property="cognome" column="cognome" />
		<result property="email" column="email" />
		<result property="telefono" column="telefono" />
		<result property="indirizzo" column="indirizzo" />
		<result property="citta" column="citta" />
		<result property="provincia" column="provincia" />
		<result property="data_registrazione" column="data_registrazione" />
		<result property="codicePostale" column="codicePostale" />
	</resultMap>

	<!-- Verifica se il file gia esiste -->
	<select id="CheckIfMediaExist" resultType="java.lang.Boolean">
		SELECT
		CASE WHEN EXISTS
		(SELECT media_id FROM media WHERE media.media_owner = #{media_owner}
		and
		media.media_path = #{media_path})
		THEN true
		ELSE false
		END AS exist
	</select>

	<!-- Verifica se il file esiste e ritorna il path -->
	<select id="GetPathIfMediaExistById" resultType="java.lang.String">
		SELECT media_path FROM media WHERE media.media_owner =
		#{media_owner}
		and
		media.media_id =
		#{media_id}
	</select>

	<delete id="DeleteMediaById">
		delete from media where
		media.media_id =
		#{media_id}
	</delete>

	<insert id="PostUsersMedia" parameterType="MediaObject" useGeneratedKeys="true" keyProperty="media.media_id" keyColumn="media_id">
		insert into
		media(media_name,
		media_path, media_owner,
		media_pubblication_date)
		values
		(#{media_name},#{media_path},#{media_owner},#{media_pubblication_date});
	</insert>

	<insert id="addNewUserLoginData" parameterType="com.portale.model.UserObject" useGeneratedKeys="true" keyProperty="user.usr_id"
		keyColumn="user_id">
		insert into users(user_org,
		user_login, user_pass, locked)
		values
		(#{organization},#{username},#{password},#{locked});
	</insert>

	<insert id="addNewUserPersonalData" parameterType="com.portale.model.UserObject">
		insert into users_details(nome, cognome,
		email, telefono,
		indirizzo, citta, provincia,
		codice_postale,
		data_registrazione,
		user_ref, codice_fiscale)
		values
		(#{nome},#{cognome},#{email},#{telefono},#{indirizzo},#{citta},#{provincia},#{codicePostale},#{data_registrazinoe},#{userid}, #{codice_fiscale})
	</insert>


	<select id="GetUserInfo" resultMap="UserInfoResultMap">
		select u.user_id, u.user_org,
		u.user_login, u.locked, u.role, us.store_name, ud.*
		from users u left
		join
		stores us
		on u.user_id = us.store_owner left join
		users_details
		ud
		on
		u.user_id = ud.user_ref
		where u.user_id = #{id}
	</select>

	<resultMap id="UserInfoStoresResultMap" type="String">
		<result property="usr_store" column="store_name" javaType="String" />
	</resultMap>

	<resultMap id="UserInfoResultMap" type="UserObject">
		<id property="usr_id" column="user_id" />
		<result property="usr_organization" column="user_org" />
		<result property="usr_username" column="user_login" />
		<result property="authorities" column="role" />
		<result property="locked" column="locked" />
		<result property="nome" column="nome" />
		<result property="cognome" column="cognome" />
		<result property="email" column="email" />
		<result property="telefono" column="telefono" />
		<result property="indirizzo" column="indirizzo" />
		<result property="citta" column="citta" />
		<result property="provincia" column="provincia" />
		<result property="codicePostale" column="codice_postale" />
		<result property="data_registrazione" column="data_registrazione" />
		<collection resultMap="UserInfoStoresResultMap" property="usr_store" />
	</resultMap>

	<select id="GetUsersLoginList" resultMap="UsersLoginResultMap">
		select users.user_login
		from users
	</select>
	<resultMap id="UsersLoginResultMap" type="UserObject">
		<result property="usr_username" column="user_login" />
	</resultMap>

	<update id="updateUserPrincipal">
		update users
		<set>
			<if test="organization != null">user_org = #{organization},</if>
			<if test="username != null">user_login = #{username},</if>
			<if test="password != null">user_pass = #{password},</if>
			<if test="locked != null">locked = #{locked},</if>
			<if test="role_id != null">role = #{role_id}</if>
		</set>
		where user_id = #{userid}
	</update>

	<update id="updateUserDetails">
		update users_details
		<set>
			<if test="nome != null">nome = #{nome},</if>
			<if test="cognome != null">cognome = #{cognome},</if>
			<if test="email != null">email = #{email},</if>
			<if test="telefono != null">telefono = #{telefono},</if>
			<if test="indirizzo != null">indirizzo = #{indirizzo},</if>
			<if test="citta != null">citta = #{citta},</if>
			<if test="provincia != null">provincia = #{provincia},</if>
			<if test="codicePostale != null">codice_postale = #{codicePostale}</if>
		</set>
		where user_ref = #{userid}
	</update>

</mapper>