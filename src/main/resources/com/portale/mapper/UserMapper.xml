<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portale.mapper.UserMapper">
	
	<select id="GetUsersCount" resultType="java.lang.Long">
		select distinct count(*) over ()
		from users u left join users_details ud
		on u.user_id =
		ud.ud_user_ref
		where u.user_id != 0
		<if test="search != null">
			and (user_org ilike #{search}
			or user_login ilike #{search}
			or nome ilike #{search}
			or cognome ilike #{search}
			or email
			ilike #{search})
		</if>
	</select>
	
	<resultMap id="UserNameObjectResultMap" type="UserObject">
		<result property="usr_id" column="user_id" />
		<result property="usr_username" column="user_login" />
	</resultMap>

	<resultMap id="UserObjectResultMap" type="UserObject">
		<result property="usr_id" column="user_id" />
		<result property="usr_username" column="user_login" />
		<result property="usr_password" column="user_pass" />
		<result property="authorities" column="authorities" />
		<result property="role_id" column="user_role" />
		<result property="role_name" column="role_name" />
		<result property="locked" column="user_locked" />
	</resultMap>
	
		<resultMap id="UsersDetailsResultMap" type="UserObject">
	<id property="usr_id" column="user_id" />
		<result property="usr_organization" column="user_org" />
		<result property="usr_username" column="user_login" />
		<result property="authorities" column="user_role" />
		<result property="locked" column="user_locked" />
		<result property="nome" column="ud_nome" />
		<result property="cognome" column="ud_cognome" />
		<result property="email" column="ud_email" />
		<result property="telefono" column="ud_telefono" />
		<result property="indirizzo" column="ud_indirizzo" />
		<result property="citta" column="ud_citta" />
		<result property="provincia" column="ud_provincia" />
		<result property="codicePostale" column="ud_codice_postale" />
		<result property="data_registrazione" column="ud_data_registrazione" />
		<association property="PSO" javaType="PaginationSupportObject">
			<result property="totalResults" column="totalResults" />
			<result property="lastResultID" column="lastResultID" />
		</association>
</resultMap>

	<resultMap id="UserInfoResultMap" type="UserObject">
		<id property="usr_id" column="user_id" />
		<result property="usr_organization" column="user_org" />
		<result property="usr_username" column="user_login" />
		<result property="authorities" column="user_role" />
		<result property="locked" column="user_locked" />
		<result property="nome" column="ud_nome" />
		<result property="cognome" column="ud_cognome" />
		<result property="email" column="ud_email" />
		<result property="telefono" column="ud_telefono" />
		<result property="indirizzo" column="ud_indirizzo" />
		<result property="citta" column="ud_citta" />
		<result property="provincia" column="ud_provincia" />
		<result property="codicePostale" column="ud_codice_postale" />
		<result property="data_registrazione" column="ud_data_registrazione" />
		<association property="PSO" javaType="PaginationSupportObject">
			<result property="lastResultID" column="lastResultID" />
		</association>
		<collection resultMap="UserInfoStoresResultMap" property="usr_store" />
	</resultMap>

	<resultMap id="UserInfoStoresResultMap" type="String">
		<result property="usr_store" column="store_name" javaType="String" />
	</resultMap>

	<resultMap id="UsersLoginResultMap" type="UserObject">
		<result property="usr_username" column="user_login" />
	</resultMap>

	<select id="GetUserLoginData" resultMap="UserObjectResultMap">
		select u.*, r.user_role as authorities, r.role_name
		from
		users u, users_role r
		where
		u.user_login=#{username}
		and u.user_role =
		r.role_index
	</select>

	<select id="GetUserPrincipalList" resultMap="UserNameObjectResultMap">
		select u.user_id, u.user_login, ud.ud_nome, ud.ud_cognome
		from
		users u, users_details ud
		where
		u.user_id = ud.ud_user_ref
		and u.user_id != 0
	</select>

	<select id="GetUsersIdListByRole" resultType="int">
		select u.user_id
		from users u, users_role ur
		where u.user_role =
		ur.role_index
		and u.user_id != 0
		<if test="role_name != null">and ur.user_role = #{role_name}</if>
	</select>

	<select id="GetUserInfoByName" resultMap="UsersDetailsResultMap">
		select u.user_id,
		u.user_org, u.user_login, u.user_locked, u.user_role, ud.*
		from users u left join
		users_details
		ud
		on u.user_id = ud.ud_user_ref
		where user_login =
		#{username}
	</select>

	<select id="GetUsersDetailsData" resultMap="UsersDetailsResultMap">
	<if test="abstractN == false">
		select *, min(user_id) over() as lastResultID from (
		select u.user_id, u.user_org, u.user_login, r.role_name ,
		u.user_locked, ud.*
		from users u left join users_details ud
		on u.user_id =
		ud.ud_user_ref
		inner
		join
		users_role r
		on r.role_index = u.user_role
		where u.user_id != 0
		<if test="lastResultID > 0">and u.user_id &lt; #{lastResultID}</if>
		<if test="search != null">
			and (u.user_org ilike CONCAT('%',#{search},'%')
			or u.user_login ilike CONCAT('%',#{search},'%')
			or ud.ud_nome ilike CONCAT('%',#{search},'%')
			or
			ud.ud_cognome ilike CONCAT('%',#{search},'%')
			or ud.ud_email ilike CONCAT('%',#{search},'%')
			)
		</if>
		order by
		u.user_id desc
		limit #{limit}
		) res
	</if>
	<if test="abstractN == true">
	</if>
	<if test="lastResultID == -121">
		select u.user_id, u.user_org, u.user_login, r.role_name ,
		u.user_locked, ud.*, min(user_id) over() as lastResultID, tr.pag_column_count as totalResults
		from users u left join users_details ud
		on u.user_id =
		ud.ud_user_ref
		inner
		join
		users_role r
		on r.role_index = u.user_role
		join (select pag_table, pag_column_count, pag_last_id from pagination where pag_table = 'users') tr on tr.pag_table = 'users'
		where u.user_id != 0
		and u.user_id &lt;= #{lastResultID}
		<if test="search != null">
			and (user_org ilike CONCAT('%',#{search},'%')
			or user_login ilike CONCAT('%',#{search},'%')
			or ud_nome ilike CONCAT('%',#{search},'%')
			or
			ud_cognome ilike CONCAT('%',#{search},'%')
			or ud_email ilike CONCAT('%',#{search},'%')
		</if>
		order by
		order by
		u.user_id DESC
		limit #{limit}
	</if>
	<if test="lastResultID == -123">
		select u.user_id, u.user_org, u.user_login, r.role_name ,
		u.user_locked, ud.*
		from users u left join users_details ud
		on u.user_id =
		ud.ud_user_ref
		left
		join
		users_role r
		on r.role_index = u.user_role
		where u.user_id != 0
		<if test="search != null">
			and (user_org ilike CONCAT('%',#{search},'%')
			or user_login ilike CONCAT('%',#{search},'%')
			or ud_nome ilike CONCAT('%',#{search},'%')
			or
			ud_cognome ilike CONCAT('%',#{search},'%')
			or ud_email ilike CONCAT('%',#{search},'%')
		</if>
		order by
		u.user_id desc
		limit #{limit}
		offset #{offset}
	</if>
</select>

	<select id="GetUserInfo" resultMap="UserInfoResultMap">
		select u.user_id, u.user_org,
		u.user_login, u.user_locked, u.user_role, us.store_name, ud.*
		from users u left
		join
		store us
		on u.user_id = us.store_owner left join
		users_details
		ud
		on
		u.user_id = ud.ud_user_ref
		where u.user_id = #{id}
	</select>

	<select id="GetUsersLoginList" resultMap="UsersLoginResultMap">
		select users.user_login
		from users
	</select>

	<insert id="addNewUserLoginData" parameterType="com.portale.model.UserObject" useGeneratedKeys="true" keyProperty="user.usr_id"
		keyColumn="user_id">
		insert into users(user_org,
		user_login, user_pass, user_locked)
		values
		(#{organization},#{username},#{password},#{locked});
	</insert>

	<insert id="addNewUserPersonalData" parameterType="com.portale.model.UserObject">
		insert into users_details(ud_nome, ud_cognome,
		ud_email, ud_telefono,
		ud_indirizzo, ud_citta,
		ud_provincia,
		ud_codice_postale,
		ud_data_registrazione,
		ud_user_ref, ud_codice_fiscale)
		values
		(#{nome},#{cognome},#{email},#{telefono},#{indirizzo},#{citta},#{provincia},#{codicePostale},#{data_registrazinoe},#{userid}, #{codice_fiscale})
	</insert>

	<update id="updateUserPrincipal">
		update users
		<set>
			<if test="organization != null">user_org = #{organization},</if>
			<if test="username != null">user_login = #{username},</if>
			<if test="password != null">user_pass = #{password},</if>
			<if test="locked != null">user_locked = #{locked},</if>
			<if test="role_id != -1">user_role = #{role_id}</if>
		</set>
		where user_id = #{userid}
	</update>

	<update id="updateUserDetails">
		update users_details
		<set>
			<if test="nome != null">ud_nome = #{nome},</if>
			<if test="cognome != null">ud_cognome = #{cognome},</if>
			<if test="email != null">ud_email = #{email},</if>
			<if test="telefono != null">ud_telefono = #{telefono},</if>
			<if test="indirizzo != null">ud_indirizzo = #{indirizzo},</if>
			<if test="citta != null">ud_citta = #{citta},</if>
			<if test="provincia != null">ud_provincia = #{provincia},</if>
			<if test="codicePostale != null">ud_codice_postale = #{codicePostale}</if>
		</set>
		where ud_user_ref = #{userid}
	</update>

	<delete id="deleteUser">
		delete from users_details
		where ud_user_ref = #{userid}
		delete from users
		where user_id = #{userid}
	</delete>
</mapper>